---
- name: Make sure Apache2 is installed
  ansible.builtin.apt:
    name: apache2
    state: present
    update_cache: true
  
- name: Start Apache2
  ansible.builtin.service:
    name: apache2
    state: started
    enabled: true
  
- name: Make sure Python3 PyMySQL is installed
  ansible.builtin.apt:
    name: python3-pymysql
    state: present
    update_cache: true
  
- name: Make sure PHP is installed
  ansible.builtin.apt:
    name: php
    state: present
  
- name: Make sure PHP-MySQL is installed
  ansible.builtin.apt:
    name: php-mysql
    state: present
  
- name: Make sure temp directory called wordpress is there
  ansible.builtin.file:
    path: ~/wordpress
    owner: ansible
    group: ansible
    mode: '0644'
    state: directory
  
# - name: Make sure download Mariadb repository installer
#  ansible.builtin.get_url:
#    url: https://r.mariadb.com/downloads/mariadb_repo_setup
#    dest: ~/wordpress/mariadb_repo_setup
#    mode: '0755'
  
# - name: Install Mariadb repository
#  ansible.builtin.command: ~/wordpress/mariadb_repo_setup --mariadb-server-version="mariadb-10.3"
        
- name: Make sure Maridb-server is installed
  ansible.builtin.apt:
    name: mariadb-server
    state: present
    update_cache: true
  
- name: Make sure Maridb-backup is installed
  ansible.builtin.apt:
    name: mariadb-backup
    state: present
  notify: Restart Apache2
  
- name: Make sure index.html is removed from /var/www/html/
  ansible.builtin.file:
    path: /var/www/html/index.html
    state: absent
  
  
- name: Download and extract Wordpress tarball into /var/www/html/
  ansible.builtin.unarchive:
    src: https://wordpress.org/wordpress-6.6.2.tar.gz
    dest: /var/www/html/
    owner: root
    group: root
    mode: '0755'
    remote_src: true

- name: Change apache2 document root to /etc/apache2/sites-available
  ansible.builtin.template:
    src: "{{ role_path }}/templates/000-default.conf.j2"
    dest: /etc/apache2/sites-available/000-default.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart Apache2
  
- name: Make sure wordpress database with name is created
  community.mysql.mysql_db:
    name: wordpress
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
  
- name: Create database user with name 'wordpress_user' with all privilliges on wordpress database
  community.mysql.mysql_user:
    name: wordpress_user
    password: Admin12!
    priv: 'wordpress.*:ALL,GRANT'
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
  
  
- name: Copy wp-config.php file with defined configuration.
  ansible.builtin.copy:
    src: "{{ role_path }}/files/wp-config.php"
    dest: /var/www/html/wordpress/wp-config.php
    owner: root
    group: root
    mode: '0755'
  notify: Restart Apache2

- name: Make sure extra files are deleted from html directory.
  ansible.builtin.file:
    path: /var/www/html/index.nginx-debian.html
    state: absent
  notify: Restart Apache2
  

  